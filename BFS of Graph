class Solution {
  public:
  
    // Function to return Breadth First Traversal of given graph.
    void solve(int src, vector<vector<int>> &adj, vector<int>&vis, vector<int>&ans){
        queue<int>q;
        q.push(src);
        vis[src]=1;
        while(q.empty() == false){
            int node = q.front();
            q.pop();
            ans.push_back(node);
            for(auto it : adj[node]){
                if(vis[it] == 0){
                    q.push(it);
                    vis[it] = 1;
                }
            }
        }
    }
    vector<int> bfs(vector<vector<int>> &adj) {
        // Code here
      int v = adj.size();
      vector<int>vis(v,0);
      vector<int>ans;
      for(int i=0; i<v ; i++){
          if(vis[i] == 0){
              solve(i,adj,vis,ans);
          }
      }
      return ans;
       /* int v = adj.size();
        vector<int>vis(v,0);
        queue<int>q;
        q.push(0);
        vis[0] = 1;
        vector<int> ans;
        while(q.empty() == false){
            int node = q.front();
            q.pop();
            ans.push_back(node);
            for(auto it : adj[node]){
                if(vis[it] == 0){
                    q.push(it);
                    vis[it] = 1;
                }
            }
            
        }
        return ans;*/
    }
};
